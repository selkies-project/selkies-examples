# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

substitutions:
  _REGION: us-west1
  _POLICY: policies/allow-all.rego

tags:
  - external-auth

steps:
  ###
  # Deploy manifests to cluster.
  ###
  - name: "gcr.io/cloud-builders/kubectl"
    id: deploy-manifests
    entrypoint: "bash"
    args:
      - "-exc"
      - |
        kubectl kustomize manifests/ | \
          sed 's/$${PROJECT_ID}/'${PROJECT_ID}'/g' | \
          /builder/kubectl.bash apply -f -
        
        # Apply the policy
        [[ ! -f ${_POLICY} ]] && "ERROR: Policy file not found: ${_POLICY}" && exit 1
        kubectl -n opa create configmap selkies-opa-policy \
          --from-file policy.rego=${_POLICY} --dry-run -o yaml | \
          kubectl label -f- --dry-run -o yaml --local openpolicyagent.org/policy=rego | \
          /builder/kubectl.bash apply -f -

        # Get policy status
        STATUS=$(/builder/kubectl.bash get cm -n opa selkies-opa-policy -o jsonpath='{.metadata.annotations.openpolicyagent\.org/policy-status}')
        STATUS_OK='{"status":"ok"}'
        [[ ! $${STATUS} == $${STATUS_OK} ]] && echo "ERROR: failed to apply policy" && exit 1
        echo "Policy applied"
    env:
      - "PROJECT_ID=${PROJECT_ID}"
      - "CLOUDSDK_CORE_PROJECT=${PROJECT_ID}"
      - "CLOUDSDK_COMPUTE_REGION=${_REGION}"
      - "CLOUDSDK_CONTAINER_CLUSTER=broker-${_REGION}"
