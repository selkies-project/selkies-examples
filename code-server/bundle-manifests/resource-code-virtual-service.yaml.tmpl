# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- $hostPorts := dict 3000 .AppParams.WebPreview3000 8000 .AppParams.WebPreview8000 8080 .AppParams.WebPreview8080 }}

###
# ServiceEntry for web-preview URLs.
# Required to do route based destinations and set-cookie redirect.
###
apiVersion: networking.istio.io/v1beta1
kind: ServiceEntry
metadata:
  name: {{.ServiceName}}-web-preview
spec:
  hosts:
    - "{{.AppParams.Domain}}"
  {{- range $port, $host := $hostPorts}}
    - "{{$host}}"
  {{- end}}
  location: MESH_EXTERNAL
  ports:
  - number: 80
    name: http
    protocol: HTTP
  resolution: DNS
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: {{.ServiceName}}
spec:
  hosts:
    - "{{.AppParams.Domain}}"
    # web preview hosts
    {{- range $port, $host := $hostPorts}}
    - "{{$host}}"
    {{- end}}
  gateways:
    - pod-broker-system/code-gateway
  http:
    ###
    # rule for file manager with cookie.
    ###
    - match:
        - authority:
            exact: "{{.AppParams.Domain}}"
          headers:
            cookie:
              regex: ".*broker_{{.App}}={{.CookieValue}}.*"
          uri:
            prefix: /files/
      route:
        - destination:
            host: {{.FullName}}-{{.ServiceName}}
            port:
              number: 3181
    ###
    # rule for web interface
    ###
    - match:
        - authority:
            exact: {{.AppParams.Domain}}
          uri:
            prefix: /
          headers:
            cookie:
              regex: ".*broker_{{.App}}={{.CookieValue}}.*"
      rewrite:
        uri: /
      route:
        - destination:
            host: {{.FullName}}-{{.ServiceName}}
            port:
              number: 80
    
    ###
    # web interface fall-through with auth cookie.
    ###
    - match:
        - authority:
            exact: "{{.AppParams.Domain}}"
          headers:
            {{.SysParams.AuthHeader}}:
              regex: ".*{{$.User}}.*"
      headers:
        response:
          set:
            set-cookie: broker_{{.App}}={{.CookieValue}}
            location: /
      route:
        - destination:
            host: {{.AppParams.Domain}}
    
    {{- range $port, $host := $hostPorts}}
    ###
    # web preview for port {{$port}} with cookie.
    ###
    - match:
        - authority:
            exact: "{{$host}}"
          headers:
            cookie:
              regex: ".*{{$.App}}-web-preview-{{$port}}={{$.CookieValue}}.*"
      route:
        - destination:
            host: {{$.FullName}}-{{$.ServiceName}}
            port:
              number: {{$port}}
      corsPolicy:
        allowCredentials: true
        allowMethods:
          - POST
          - GET
        allowOrigin:
          - "*"
    
    ###
    # web preview port {{$port}} fall-through with auth cookie.
    ###
    - match:
        - authority:
            exact: "{{$host}}"
          headers:
            {{$.SysParams.AuthHeader}}:
              regex: ".*{{$.User}}.*"
      headers:
        response:
          set:
            set-cookie: {{$.App}}-web-preview-{{$port}}={{$.CookieValue}}; SameSite=None; Secure; HttpOnly
            location: /
      route:
        - destination:
            host: {{$host}}
    {{- end}}
